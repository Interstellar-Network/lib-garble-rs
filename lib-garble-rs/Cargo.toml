[package]
name = "lib-garble-rs"
version = "2.0.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
bench = false

[dependencies]
# TODO(interstellar) no_std not supported on crate.io; need a fork/patch
imageproc = { version = "0.23.0", default-features = false, git = "https://github.com/Interstellar-Network/imageproc.git", branch = "sgx-nostd-compat" }
# FAIL: no_std OK without any features, but if can not draw text there is not point...
image = { version = "0.24.5", default-features = false, git = "https://github.com/Interstellar-Network/image.git", branch = "sgx-nostd-compat" }
rusttype = { version = "0.9.3", default-features = false }
bytes = { version = "1", default-features = false }
num_enum = { version = "0.5", default-features = false }
snafu = { version = "0.7", default-features = false }
# TODO(interstellar) serde: "alloc"?
serde = { version = "1.0", default-features = false, features = ["derive"] }
postcard = { version = "1", default-features = false, features = ["alloc"] }
# https://github.com/tokio-rs/prost#using-prost-in-a-no_std-crate
# TODO(interstellar) we need a7aac766e362d87d for no_std compat
prost = { version = "0.11", default-features = false, features = ["prost-derive"], git = "https://github.com/tokio-rs/prost.git", rev = "a7aac766e362d87de5180774c124829e198f2b4c" }

rand = { version = "0.8.5", default-features = false }
rand_chacha = { version = "0.3.1", default-features = false }
num-bigint = { version ="0.4.3", optional = true }
num-traits = { version ="0.2.15", optional = true }
xxhash-rust = { version = "0.8.5", default-features = false, features = ["xxh3"] }
bitvec = { version = "1.0.1", default-features = false, features = ["alloc", "atomic", "serde"] }
hashbrown = { version = "0.13.2", features = ["serde"] }
rayon = { version = "1.7.0", optional = true }
log = { version = "0.4", default-features = false }

# # TODO(interstellar) remove profiling? This is probably not hurting at all without the corresponding enabled feature
# profiling = "1.0"

[dev-dependencies]
rand = { version = "0.8.5", default-features = false, features = [
    "std",
    "std_rng",
] }
boolean_expression = "0.4.4"
clap = { version = "3", features = ["derive"] }
criterion = "0.3"

png-utils = { git = "https://github.com/Interstellar-Network/rs-common.git" }

# # MUST match the version used by https://github.com/aclysma/profiling/blob/master/Cargo.toml (check the correct tag)
# # else "tracy_client::Client::start()" and "running()" from the profiling crate are not the same!
# tracy-client = { version = "0.14.1" }
# tracing-tracy = { version = "0.10.1" }

# coz = "0.1"

[build-dependencies]
# prost-build = "0.11"

# [features]
# default = ["profile-with-tracy"]

# profile-with-puffin = ["profiling/profile-with-puffin"]
# profile-with-optick = ["profiling/profile-with-optick"]
# profile-with-superluminal = ["profiling/profile-with-superluminal"]
# profile-with-tracing = ["profiling/profile-with-tracing"]
# profile-with-tracy = ["profiling/profile-with-tracy"]

[features]
default = ["std"]
sgx = ["imageproc/sgx"]
std = ["imageproc/std", "rayon"]
key_length_search = ["num-bigint", "num-traits"]

[[bench]]
name = "my_benchmark"
harness = false